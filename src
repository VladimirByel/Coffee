package machine

class CoffeeMaker (private var water: Int = 400, private var milk: Int = 540, private var beans: Int = 120, private var cups: Int = 9, private var money: Int = 550) {

fun buy() {
            println("What do you want to buy? 1 - espresso, 2 - latte, 3 - cappuccino: ")
            when (readln()) {
                "1" -> espresso(250,16,4,0)
                "2" -> espresso(350,20,7,75)
                "3" -> espresso(200,12,6,100)
                "back" -> return
            }
}
                
fun espresso(watere: Int, beanse: Int, moneye: Int, milke: Int) {
    if (water >= watere && beans >= beanse && money >= moneye && milk >= milke) {
        water -= watere
        beans -= beanse
        money += moneye
        cups--
        milk -= milke
        print("I have enough resources, making you a coffee!")
    } else print("Not enough ingredients")
}
            
fun fill() {
            println("How much water do you want to add?")
            var waterAdded = readln().toInt()
            println("How much milk do you want to add?")
            var milkAdded = readln().toInt()
            println("How much coffee do you want to add?")
            var beansAdded = readln().toInt()
            println("How much disposable cups do you want to add?")
            var cupsAdded = readln().toInt()
            milk = milk + milkAdded
            water = water + waterAdded
            beans = beans + beansAdded
            cups = cups + cupsAdded
        }

fun take() { 
            println("I gave you $money")
            money = 0
        }

fun remaining() {
             println("The coffee machine has:")
             println("$water ml of water")
             println("$milk ml of milk")
             println("$beans g of coffee beans")
             println("$cups disposable cups")
             println("$money of money")
        }
            }

fun main() {
    val coffee = CoffeeMaker()
    while (true) {
        println("Write action (buy, fill, take, remaining, exit)")
    when (readln()) {
        "buy" -> coffee.buy()
        "fill" -> coffee.fill()
        "take" -> coffee.take()
        "remaining" -> coffee.remaining()
        "exit" -> break
    }
    }
}
